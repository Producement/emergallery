{"version":3,"sources":["components/Firebase/context.tsx","components/Firebase/firebase.tsx","components/Firebase/index.tsx","components/Gallery/gallery.tsx","components/Gallery/index.tsx","components/Upload/index.tsx","components/Upload/upload.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["FirebaseContext","React","withFirebase","Component","props","react","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","classCallCheck","this","app","initializeApp","firestore","settings","timestampsInSnapshots","storage","SubGallery","_this","possibleConstructorReturn","getPrototypeOf","call","state","currentImage","closeLightbox","bind","assertThisInitialized","openLightbox","gotoNext","gotoPrevious","event","obj","setState","index","lightboxIsOpen","react_default","a","createElement","title","react_photo_gallery_es","photos","onClick","Lightbox_default","images","onClose","onClickPrev","onClickNext","isOpen","Gallery","_this2","twitter","snapchat","_this3","eventDoc","collection","doc","match","params","id","onSnapshot","snapshot","forEach","push","data","gallery_SubGallery","width","height","allowFullScreen","frameBorder","src","withRouter","Upload","handleselectedFile","selectedFile","target","files","_this$props","eventId","uuid","ref","child","put","then","console","log","getDownloadURL","url","set","className","type","name","onChange","sendSms","fetch","response","body","catch","error","HashRouter","Route","path","component","Boolean","window","location","hostname","ReactDOM","render","context","Provider","value","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b4c3c272.chunk.js","sourcesContent":["import * as React from 'react';\nimport Firebase from './firebase';\n\nconst FirebaseContext = React.createContext<Firebase | null>(null);\n\nexport const withFirebase = (Component: typeof React.Component) => (\n  props: any\n) => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;\n","import app from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n  }\n\n  public firestore() {\n    const firestore = app.firestore();\n    const settings = { timestampsInSnapshots: true };\n    firestore.settings(settings);\n    return firestore;\n  }\n\n  public storage() {\n    return app.storage();\n  }\n}\n\nexport default Firebase;\n","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport ReactGallery from 'react-photo-gallery';\nimport { withFirebase } from '../Firebase';\nimport Lightbox from 'react-images';\n\nclass SubGallery extends Component<any, any> {\n  constructor(props) {\n    super(props);\n    this.state = { currentImage: 0 };\n    this.closeLightbox = this.closeLightbox.bind(this);\n    this.openLightbox = this.openLightbox.bind(this);\n    this.gotoNext = this.gotoNext.bind(this);\n    this.gotoPrevious = this.gotoPrevious.bind(this);\n  }\n  openLightbox(event, obj) {\n    this.setState({\n      currentImage: obj.index,\n      lightboxIsOpen: true\n    });\n  }\n  closeLightbox() {\n    this.setState({\n      currentImage: 0,\n      lightboxIsOpen: false\n    });\n  }\n  gotoPrevious() {\n    this.setState({\n      currentImage: this.state.currentImage - 1\n    });\n  }\n  gotoNext() {\n    this.setState({\n      currentImage: this.state.currentImage + 1\n    });\n  }\n  render() {\n    return (\n      <div>\n        <section>\n          <h1>{this.props.title}</h1>\n          <ReactGallery\n            photos={this.props.photos}\n            onClick={this.openLightbox}\n          />\n          <Lightbox\n            images={this.props.photos}\n            onClose={this.closeLightbox}\n            onClickPrev={this.gotoPrevious}\n            onClickNext={this.gotoNext}\n            currentImage={this.state.currentImage}\n            isOpen={this.state.lightboxIsOpen}\n          />\n        </section>\n      </div>\n    );\n  }\n}\n\nclass Gallery extends Component<any, any> {\n  constructor(props) {\n    super(props);\n    this.state = { images: [], twitter: [], snapchat: [] };\n  }\n\n  componentDidMount() {\n    const eventDoc = this.props.firebase\n      .firestore()\n      .collection('events')\n      .doc(this.props.match.params.id);\n\n    eventDoc.collection('images').onSnapshot((snapshot: any) => {\n      const images: Array<any> = [];\n      snapshot.forEach(function(doc: any) {\n        images.push(doc.data());\n      });\n      this.setState({\n        images: images\n      });\n    });\n\n    eventDoc.collection('twitter').onSnapshot((snapshot: any) => {\n      const images: Array<any> = [];\n      snapshot.forEach(function(doc: any) {\n        images.push(doc.data());\n      });\n      this.setState({\n        twitter: images\n      });\n    });\n\n    eventDoc.collection('snapchat').onSnapshot((snapshot: any) => {\n      const images: Array<any> = [];\n      snapshot.forEach(function(doc: any) {\n        images.push(doc.data());\n      });\n      this.setState({\n        snapchat: images\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <section>\n          <SubGallery title=\"Pildid\" photos={this.state.images} />\n        </section>\n        <section>\n          <SubGallery title=\"Twitter\" photos={this.state.twitter} />\n        </section>\n        <section>\n          <SubGallery title=\"Snapchat\" photos={this.state.snapchat} />\n        </section>\n        <iframe\n          width=\"600\"\n          height=\"450\"\n          allowFullScreen\n          frameBorder=\"0\"\n          src=\"https://embed.waze.com/iframe?zoom=14&lat=59.437089&lon=24.740547&ct=livemap\"\n        />\n        <iframe\n          width=\"600\"\n          height=\"450\"\n          frameBorder=\"0\"\n          src=\"https://twimap.com/?embed=true&location=59.43806562%2C24.72830899&zoom=15&distance=500&count=100&min_timestamp=0&max_timestamp=0\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(withFirebase(Gallery));\n","import Gallery from './gallery';\nexport default Gallery;\n","import Upload from './upload';\nexport default Upload;\n","import React from 'react';\nimport uuid from 'uuid/v4';\nimport { withFirebase } from '../Firebase';\n\nclass Upload extends React.Component<any, any> {\n  render() {\n    return (\n      <div className=\"App\">\n        <input type=\"file\" name=\"\" id=\"\" onChange={this.handleselectedFile} />\n        <button onClick={this.sendSms}>Send SMS to Tõnu</button>\n      </div>\n    );\n  }\n\n  handleselectedFile = (event: any) => {\n    const selectedFile = event.target.files[0];\n    const { firebase, match } = this.props;\n    const eventId = match.params.id;\n    const storage = firebase.storage();\n    const id = uuid();\n    const ref = storage.ref().child(id);\n    ref.put(selectedFile).then(function(snapshot) {\n      console.log('Saved file');\n      snapshot.ref.getDownloadURL().then(function(url) {\n        console.log(url);\n        firebase\n          .firestore()\n          .collection('events')\n          .doc(eventId)\n          .collection('images')\n          .doc(id)\n          .set({ width: 1, height: 1, src: url });\n      });\n    });\n  };\n\n  private sendSms() {\n    fetch(\n      'http://localhost:5000/g48riik/us-central1/messages/messages?to=+37253044744&message=häirekeskus!!!11'\n    )\n      .then(response => console.log(response.body))\n      .catch(error => console.log(error));\n  }\n}\n\nexport default withFirebase(Upload);\n","import React, { Component } from 'react';\nimport Gallery from './components/Gallery';\nimport Upload from './components/Upload';\nimport { withFirebase } from './components/Firebase';\nimport { HashRouter, Route } from 'react-router-dom';\nimport './App.css';\n\nclass App extends Component<any, any> {\n  render() {\n    return (\n      <HashRouter>\n        <div>\n          <Route path=\"/event/:id\" component={Gallery} />\n          <Route path=\"/upload/:id\" component={Upload} />\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default withFirebase(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}