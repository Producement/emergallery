{"version":3,"sources":["components/Firebase/context.tsx","components/Firebase/firebase.tsx","components/Firebase/index.tsx","components/Video/video.tsx","components/Gallery/gallery.tsx","components/Gallery/index.tsx","components/Upload/index.tsx","components/Upload/upload.tsx","components/Index/index.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["FirebaseContext","React","withFirebase","Component","props","react","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","classCallCheck","this","app","initializeApp","firestore","settings","timestampsInSnapshots","storage","ReceivingPeerComponent","_this","possibleConstructorReturn","getPrototypeOf","call","liveVideo","screenshot","bind","assertThisInitialized","_this2","peer2","Peer","on","data","console","log","collection","doc","set","stream","src","window","URL","createObjectURL","play","onSnapshot","snapshot","signal","canvas","document","createElement","video","width","clientWidth","height","clientHeight","getContext","drawImage","_this$props","eventId","match","params","id","uuid","ref","child","toBlob","blob","put","then","getDownloadURL","url","_this3","react_default","a","input","className","onClick","InitiatorPeer","InitiatorPeerComponent","_this4","gotMedia","initiate","_this5","peer1","initiator","navigator","getUserMedia","audio","ReceivingPeer","withRouter","SubGallery","state","currentImage","closeLightbox","openLightbox","gotoNext","gotoPrevious","event","obj","setState","index","lightboxIsOpen","title","react_photo_gallery_es","photos","Lightbox_default","images","onClose","onClickPrev","onClickNext","isOpen","Gallery","forEach","push","fetch","response","body","catch","error","sendSms","gallery_SubGallery","allowFullScreen","frameBorder","Upload","handleSelectedFile","selectedFile","target","files","img","Image","onload","naturalWidth","naturalHeight","revokeObjectURL","style","display","type","onChange","Index","value","handleChange","handleKeyPress","e","key","history","placeholder","onKeyPress","HashRouter","Route","exact","path","component","Boolean","location","hostname","ReactDOM","render","context","Provider","src_App","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.46da0893.chunk.js","sourcesContent":["import * as React from 'react';\nimport Firebase from './firebase';\n\nconst FirebaseContext = React.createContext<Firebase | null>(null);\n\nexport const withFirebase = (Component: typeof React.Component) => (\n  props: any\n) => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;\n","import app from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n  }\n\n  public firestore() {\n    const firestore = app.firestore();\n    const settings = { timestampsInSnapshots: true };\n    firestore.settings(settings);\n    return firestore;\n  }\n\n  public storage() {\n    return app.storage();\n  }\n}\n\nexport default Firebase;\n","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };\n","import React from 'react';\nimport Peer from 'simple-peer';\nimport { withFirebase } from '../Firebase';\nimport uuid from 'uuid/v4';\nimport { withRouter } from 'react-router';\n\nclass ReceivingPeerComponent extends React.Component<any, any> {\n  liveVideo: HTMLVideoElement | null = null;\n\n  constructor(props) {\n    super(props);\n    this.screenshot = this.screenshot.bind(this);\n  }\n\n  componentDidMount() {\n    var peer2 = new Peer();\n\n    peer2.on('signal', data => {\n      console.log('Peer2 signal');\n      console.log(data);\n      this.props.firebase\n        .firestore()\n        .collection('peers')\n        .doc('peer1')\n        .set({ data });\n    });\n\n    peer2.on('stream', stream => {\n      console.log('Stream');\n      if (this.liveVideo) {\n        this.liveVideo.src = window.URL.createObjectURL(stream);\n        this.liveVideo.play();\n      }\n    });\n\n    peer2.on('close', () => {\n      console.log('Closing peer2');\n      this.props.firebase\n        .firestore()\n        .collection('peers')\n        .doc('peer1')\n        .set({ data: '' });\n    });\n\n    this.props.firebase\n      .firestore()\n      .collection('peers')\n      .doc('peer2')\n      .onSnapshot((snapshot: any) => {\n        const data = snapshot.data().data;\n        console.log(data);\n        if (data) {\n          peer2.signal(data);\n        }\n      });\n  }\n\n  screenshot() {\n    const canvas = document.createElement('canvas');\n    if (canvas) {\n      const video: any = this.liveVideo;\n      canvas.width = video.clientWidth;\n      canvas.height = video.clientHeight;\n      const ctx: any = canvas.getContext('2d');\n      ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n      const { firebase, match } = this.props;\n      const eventId = match.params.id;\n      const storage = firebase.storage();\n      const id = uuid();\n      const ref = storage.ref().child(id);\n\n      canvas.toBlob(blob => {\n        ref.put(blob).then(function(snapshot) {\n          console.log('Saved file');\n          snapshot.ref.getDownloadURL().then(function(url) {\n            console.log(url);\n            firebase\n              .firestore()\n              .collection('events')\n              .doc(eventId)\n              .collection('images')\n              .doc(id)\n              .set({ width: canvas.width, height: canvas.height, src: url });\n          });\n        });\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <video\n          ref={input => {\n            this.liveVideo = input;\n          }}\n        />\n        <button className=\"btn btn-info\" onClick={this.screenshot}>\n          Tee pilt\n        </button>\n      </div>\n    );\n  }\n}\n\nclass InitiatorPeerComponent extends React.Component<any, any> {\n  constructor(props) {\n    super(props);\n    this.gotMedia = this.gotMedia.bind(this);\n    this.initiate = this.initiate.bind(this);\n  }\n\n  gotMedia(stream) {\n    console.log('Got media');\n    var peer1 = new Peer({ initiator: true, stream: stream });\n\n    peer1.on('signal', data => {\n      console.log('Peer1 signal');\n      this.props.firebase\n        .firestore()\n        .collection('peers')\n        .doc('peer2')\n        .set({ data });\n    });\n\n    peer1.on('close', () => {\n      console.log('Closing peer1');\n      this.props.firebase\n        .firestore()\n        .collection('peers')\n        .doc('peer2')\n        .set({ data: '' });\n    });\n\n    this.props.firebase\n      .firestore()\n      .collection('peers')\n      .doc('peer1')\n      .onSnapshot((snapshot: any) => {\n        const data = snapshot.data().data;\n        console.log(data);\n        if (data) {\n          peer1.signal(data);\n        }\n      });\n  }\n\n  initiate() {\n    navigator.getUserMedia(\n      { video: true, audio: true },\n      this.gotMedia,\n      function() {}\n    );\n  }\n  render() {\n    return (\n      <button className=\"btn btn-info\" onClick={this.initiate}>\n        LISA VIDEO\n      </button>\n    );\n  }\n}\n\nconst InitiatorPeer = withFirebase(InitiatorPeerComponent);\nconst ReceivingPeer = withRouter(withFirebase(ReceivingPeerComponent));\n\nexport { InitiatorPeer, ReceivingPeer };\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport ReactGallery from 'react-photo-gallery';\nimport { withFirebase } from '../Firebase';\nimport Lightbox from 'react-images';\nimport { ReceivingPeer } from '../Video';\nimport './Gallery.css';\n\nclass SubGallery extends Component<any, any> {\n  constructor(props) {\n    super(props);\n    this.state = { currentImage: 0 };\n    this.closeLightbox = this.closeLightbox.bind(this);\n    this.openLightbox = this.openLightbox.bind(this);\n    this.gotoNext = this.gotoNext.bind(this);\n    this.gotoPrevious = this.gotoPrevious.bind(this);\n  }\n  openLightbox(event, obj) {\n    this.setState({\n      currentImage: obj.index,\n      lightboxIsOpen: true\n    });\n  }\n  closeLightbox() {\n    this.setState({\n      currentImage: 0,\n      lightboxIsOpen: false\n    });\n  }\n  gotoPrevious() {\n    this.setState({\n      currentImage: this.state.currentImage - 1\n    });\n  }\n  gotoNext() {\n    this.setState({\n      currentImage: this.state.currentImage + 1\n    });\n  }\n\n  render() {\n    return (\n      <section>\n        <h1 className=\"heading\">{this.props.title}</h1>\n        <ReactGallery photos={this.props.photos} onClick={this.openLightbox} />\n        <Lightbox\n          images={this.props.photos}\n          onClose={this.closeLightbox}\n          onClickPrev={this.gotoPrevious}\n          onClickNext={this.gotoNext}\n          currentImage={this.state.currentImage}\n          isOpen={this.state.lightboxIsOpen}\n        />\n      </section>\n    );\n  }\n}\n\nclass Gallery extends Component<any, any> {\n  constructor(props) {\n    super(props);\n    this.state = { images: [] };\n  }\n\n  componentDidMount() {\n    const eventDoc = this.props.firebase\n      .firestore()\n      .collection('events')\n      .doc(this.props.match.params.id);\n\n    eventDoc.collection('images').onSnapshot((snapshot: any) => {\n      const images: Array<any> = [];\n      snapshot.forEach(function(doc: any) {\n        images.push(doc.data());\n      });\n      this.setState({\n        images: images\n      });\n    });\n  }\n\n  private sendSms() {\n    fetch(\n      'http://localhost:5000/g48riik/us-central1/messages/messages?to=+37253044744&message=häirekeskus!!!11'\n    )\n      .then(response => console.log(response.body))\n      .catch(error => console.log(error));\n  }\n\n  render() {\n    return (\n      <div>\n        <ReceivingPeer />\n\n        <section>\n          <button className=\"btn btn-primary\" onClick={this.sendSms}>\n            Ask for pics via SMS\n          </button>\n        </section>\n\n        <SubGallery title=\"Pildid\" photos={this.state.images} />\n\n        <section>\n          <h1 className=\"heading\">Waze</h1>\n          <iframe\n            width=\"600\"\n            height=\"450\"\n            allowFullScreen\n            frameBorder=\"0\"\n            src=\"https://embed.waze.com/iframe?zoom=14&lat=59.438698&lon=24.729117&ct=livemap\"\n          />\n        </section>\n\n        <section>\n          <h1 className=\"heading\">Twitter</h1>\n          <iframe\n            width=\"600\"\n            height=\"450\"\n            frameBorder=\"0\"\n            src=\"https://twimap.com/?embed=true&location=59.438698%2C24.729117&zoom=15&distance=500&count=100&min_timestamp=0&max_timestamp=0\"\n          />\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(withFirebase(Gallery));\n","import Gallery from './gallery';\nexport default Gallery;\n","import Upload from './upload';\nexport default Upload;\n","import React from 'react';\nimport uuid from 'uuid/v4';\nimport { withFirebase } from '../Firebase';\nimport { InitiatorPeer } from '../Video';\n\nclass Upload extends React.Component<any, any> {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"row\">\n          <div className=\"col-md-12 text-center\">\n            <h1>Häirekeskuse Pildipank</h1>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-12 text-center\">\n            <label>\n              <input\n                style={{ display: 'none' }}\n                type=\"file\"\n                onChange={this.handleSelectedFile}\n              />\n              <span className=\"btn btn-info\">LISA PILT</span>\n            </label>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-12 text-center\">\n            <InitiatorPeer />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  handleSelectedFile = (event: any) => {\n    const selectedFile = event.target.files[0];\n    const { firebase, match } = this.props;\n    const eventId = match.params.id;\n    const storage = firebase.storage();\n    const id = uuid();\n    const ref = storage.ref().child(id);\n\n    let width = 1;\n    let height = 1;\n    if (selectedFile) {\n      const img = new Image();\n\n      img.src = window.URL.createObjectURL(selectedFile);\n\n      img.onload = function() {\n        width = img.naturalWidth;\n        height = img.naturalHeight;\n\n        window.URL.revokeObjectURL(img.src);\n      };\n    }\n\n    ref.put(selectedFile).then(function(snapshot) {\n      console.log('Saved file');\n      snapshot.ref.getDownloadURL().then(function(url) {\n        console.log(url);\n        firebase\n          .firestore()\n          .collection('events')\n          .doc(eventId)\n          .collection('images')\n          .doc(id)\n          .set({ width: width, height: height, src: url });\n      });\n    });\n  };\n}\n\nexport default withFirebase(Upload);\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nclass Index extends React.Component<any, any> {\n  constructor(props) {\n    super(props);\n    this.state = { value: '' };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n  }\n\n  private sendSms() {\n    fetch(\n      'http://localhost:5000/g48riik/us-central1/messages/messages?to=+37253044744&message=häirekeskus!!!11'\n    )\n      .then(response => console.log(response.body))\n      .catch(error => console.log(error));\n  }\n\n  private handleNumber() {}\n\n  handleChange(e) {\n    this.setState({ value: e.target.value });\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.sendSms();\n      this.props.history.push('/event/S7FXwA766Nay1ymu0dcN');\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"row justify-content-center align-items-center\">\n          <div className=\"col\">\n            <h1 className=\"display-4 text-center\">Häirekeskuse Pildipank</h1>\n          </div>\n        </div>\n        <div className=\"row justify-content-center align-items-center\">\n          <div className=\"col-4\">\n            <div className=\"form-group\">\n              <input\n                className=\"form-control\"\n                id=\"inputlg\"\n                type=\"text\"\n                placeholder=\"Sisesta mobiilinumber ja vajuta enter\"\n                onKeyPress={this.handleKeyPress}\n                onChange={this.handleChange}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Index);\n","import React, { Component } from 'react';\nimport Gallery from './components/Gallery';\nimport Upload from './components/Upload';\nimport { withFirebase } from './components/Firebase';\nimport { HashRouter, Route } from 'react-router-dom';\nimport Index from './components/Index';\n\nclass App extends Component<any, any> {\n  render() {\n    return (\n      <HashRouter>\n        <div className=\"container-fluid\">\n          <Route exact path=\"/\" component={Index} />\n          <Route path=\"/event/:id\" component={Gallery} />\n          <Route path=\"/upload/:id\" component={Upload} />\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default withFirebase(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Firebase, { FirebaseContext } from './components/Firebase';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}