{"version":3,"sources":["components/Firebase/context.tsx","components/Firebase/firebase.tsx","components/Firebase/index.tsx","components/Video/video.tsx","components/Gallery/gallery.tsx","components/Gallery/index.tsx","components/Upload/index.tsx","components/Upload/upload.tsx","components/Stream/index.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["FirebaseContext","React","withFirebase","Component","props","react","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","classCallCheck","this","app","initializeApp","firestore","settings","timestampsInSnapshots","storage","ReceivingPeerComponent","liveVideo","_this2","peer2","Peer","on","data","console","log","collection","doc","set","stream","src","window","URL","createObjectURL","play","onSnapshot","snapshot","signal","_this3","react_default","a","createElement","ref","input","InitiatorPeer","InitiatorPeerComponent","_this4","possibleConstructorReturn","getPrototypeOf","call","gotMedia","bind","assertThisInitialized","initiate","_this5","peer1","initiator","navigator","getUserMedia","video","facingMode","exact","audio","onClick","ReceivingPeer","SubGallery","_this","state","currentImage","closeLightbox","openLightbox","gotoNext","gotoPrevious","event","obj","setState","index","lightboxIsOpen","className","title","react_photo_gallery_es","photos","Lightbox_default","images","onClose","onClickPrev","onClickNext","isOpen","Gallery","match","params","id","forEach","push","fetch","then","response","body","catch","error","sendSms","gallery_SubGallery","width","height","allowFullScreen","frameBorder","withRouter","Upload","handleSelectedFile","selectedFile","target","files","_this$props","eventId","uuid","child","img","Image","onload","naturalWidth","naturalHeight","revokeObjectURL","put","getDownloadURL","url","type","onChange","htmlFor","aria-describedby","Stream","sendTwitter","sendTwitterInit","stopTwitter","countdown","setInterval","clearInterval","HashRouter","Route","path","component","Boolean","location","hostname","ReactDOM","render","context","Provider","value","src_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bececc60.chunk.js","sourcesContent":["import * as React from 'react';\nimport Firebase from './firebase';\n\nconst FirebaseContext = React.createContext<Firebase | null>(null);\n\nexport const withFirebase = (Component: typeof React.Component) => (\n  props: any\n) => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;\n","import app from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n  }\n\n  public firestore() {\n    const firestore = app.firestore();\n    const settings = { timestampsInSnapshots: true };\n    firestore.settings(settings);\n    return firestore;\n  }\n\n  public storage() {\n    return app.storage();\n  }\n}\n\nexport default Firebase;\n","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };\n","import React from 'react';\nimport Peer from 'simple-peer';\nimport { withFirebase } from '../Firebase';\n\nclass ReceivingPeerComponent extends React.Component<any, any> {\n  liveVideo: HTMLVideoElement | null = null;\n\n  componentDidMount() {\n    var peer2 = new Peer();\n\n    peer2.on('signal', data => {\n      console.log('Peer2 signal');\n      console.log(data);\n      this.props.firebase\n        .firestore()\n        .collection('peers')\n        .doc('peer1')\n        .set({ data });\n    });\n\n    peer2.on('stream', stream => {\n      console.log('Stream');\n      if (this.liveVideo) {\n        this.liveVideo.src = window.URL.createObjectURL(stream);\n        this.liveVideo.play();\n      }\n    });\n\n    peer2.on('close', () => {\n      console.log('Closing peer2');\n      this.props.firebase\n        .firestore()\n        .collection('peers')\n        .doc('peer1')\n        .set({ data: '' });\n    });\n\n    this.props.firebase\n      .firestore()\n      .collection('peers')\n      .doc('peer2')\n      .onSnapshot((snapshot: any) => {\n        const data = snapshot.data().data;\n        console.log(data);\n        if (data) {\n          peer2.signal(data);\n        }\n      });\n  }\n  render() {\n    return (\n      <video\n        ref={input => {\n          this.liveVideo = input;\n        }}\n      />\n    );\n  }\n}\n\nclass InitiatorPeerComponent extends React.Component<any, any> {\n  constructor(props) {\n    super(props);\n    this.gotMedia = this.gotMedia.bind(this);\n    this.initiate = this.initiate.bind(this);\n  }\n\n  gotMedia(stream) {\n    console.log('Got media');\n    var peer1 = new Peer({ initiator: true, stream: stream });\n\n    peer1.on('signal', data => {\n      console.log('Peer1 signal');\n      this.props.firebase\n        .firestore()\n        .collection('peers')\n        .doc('peer2')\n        .set({ data });\n    });\n\n    peer1.on('close', () => {\n      console.log('Closing peer1');\n      this.props.firebase\n        .firestore()\n        .collection('peers')\n        .doc('peer2')\n        .set({ data: '' });\n    });\n\n    this.props.firebase\n      .firestore()\n      .collection('peers')\n      .doc('peer1')\n      .onSnapshot((snapshot: any) => {\n        const data = snapshot.data().data;\n        console.log(data);\n        if (data) {\n          peer1.signal(data);\n        }\n      });\n  }\n\n  initiate() {\n    navigator.getUserMedia(\n      { video: { facingMode: { exact: 'environment' } }, audio: true },\n      this.gotMedia,\n      function() {}\n    );\n  }\n  render() {\n    return <button onClick={this.initiate}>Video</button>;\n  }\n}\n\nconst InitiatorPeer = withFirebase(InitiatorPeerComponent);\nconst ReceivingPeer = withFirebase(ReceivingPeerComponent);\n\nexport { InitiatorPeer, ReceivingPeer };\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport ReactGallery from 'react-photo-gallery';\nimport { withFirebase } from '../Firebase';\nimport Lightbox from 'react-images';\nimport { ReceivingPeer } from '../Video';\nimport './Gallery.css';\n\nclass SubGallery extends Component<any, any> {\n  constructor(props) {\n    super(props);\n    this.state = { currentImage: 0 };\n    this.closeLightbox = this.closeLightbox.bind(this);\n    this.openLightbox = this.openLightbox.bind(this);\n    this.gotoNext = this.gotoNext.bind(this);\n    this.gotoPrevious = this.gotoPrevious.bind(this);\n  }\n  openLightbox(event, obj) {\n    this.setState({\n      currentImage: obj.index,\n      lightboxIsOpen: true\n    });\n  }\n  closeLightbox() {\n    this.setState({\n      currentImage: 0,\n      lightboxIsOpen: false\n    });\n  }\n  gotoPrevious() {\n    this.setState({\n      currentImage: this.state.currentImage - 1\n    });\n  }\n  gotoNext() {\n    this.setState({\n      currentImage: this.state.currentImage + 1\n    });\n  }\n\n  render() {\n    return (\n      <section>\n        <h1 className=\"heading\">{this.props.title}</h1>\n        <ReactGallery photos={this.props.photos} onClick={this.openLightbox} />\n        <Lightbox\n          images={this.props.photos}\n          onClose={this.closeLightbox}\n          onClickPrev={this.gotoPrevious}\n          onClickNext={this.gotoNext}\n          currentImage={this.state.currentImage}\n          isOpen={this.state.lightboxIsOpen}\n        />\n      </section>\n    );\n  }\n}\n\nclass Gallery extends Component<any, any> {\n  constructor(props) {\n    super(props);\n    this.state = { images: [] };\n  }\n\n  componentDidMount() {\n    const eventDoc = this.props.firebase\n      .firestore()\n      .collection('events')\n      .doc(this.props.match.params.id);\n\n    eventDoc.collection('images').onSnapshot((snapshot: any) => {\n      const images: Array<any> = [];\n      snapshot.forEach(function(doc: any) {\n        images.push(doc.data());\n      });\n      this.setState({\n        images: images\n      });\n    });\n  }\n\n  private sendSms() {\n    fetch(\n      'http://localhost:5000/g48riik/us-central1/messages/messages?to=+37253044744&message=häirekeskus!!!11'\n    )\n      .then(response => console.log(response.body))\n      .catch(error => console.log(error));\n  }\n\n  render() {\n    return (\n      <div>\n        <ReceivingPeer />\n\n        <section>\n          <button className=\"btn btn-primary\" onClick={this.sendSms}>\n            Send SMS to Tõnu\n          </button>\n        </section>\n\n        <SubGallery title=\"Pildid\" photos={this.state.images} />\n\n        <section>\n          <h1 className=\"heading\">Waze</h1>\n          <iframe\n            width=\"600\"\n            height=\"450\"\n            allowFullScreen\n            frameBorder=\"0\"\n            src=\"https://embed.waze.com/iframe?zoom=14&lat=59.437089&lon=24.740547&ct=livemap\"\n          />\n        </section>\n\n        <section>\n          <h1 className=\"heading\">Twitter</h1>\n          <iframe\n            width=\"600\"\n            height=\"450\"\n            frameBorder=\"0\"\n            src=\"https://twimap.com/?embed=true&location=59.43806562%2C24.72830899&zoom=15&distance=500&count=100&min_timestamp=0&max_timestamp=0\"\n          />\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(withFirebase(Gallery));\n","import Gallery from './gallery';\nexport default Gallery;\n","import Upload from './upload';\nexport default Upload;\n","import React from 'react';\nimport uuid from 'uuid/v4';\nimport { withFirebase } from '../Firebase';\nimport { InitiatorPeer } from '../Video';\n\nclass Upload extends React.Component<any, any> {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"input-group mb-3\">\n          <div className=\"custom-file\">\n            <input\n              type=\"file\"\n              className=\"custom-file-input\"\n              id=\"inputGroupFile02\"\n              onChange={this.handleSelectedFile}\n            />\n            <label\n              className=\"custom-file-label\"\n              htmlFor=\"inputGroupFile02\"\n              aria-describedby=\"inputGroupFileAddon02\"\n            >\n              Upload picture\n            </label>\n          </div>\n          <div className=\"input-group-append\">\n            <span className=\"input-group-text\" id=\"inputGroupFileAddon02\">\n              Upload\n            </span>\n          </div>\n        </div>\n        <InitiatorPeer />\n      </div>\n    );\n  }\n\n  handleSelectedFile = (event: any) => {\n    const selectedFile = event.target.files[0];\n    const { firebase, match } = this.props;\n    const eventId = match.params.id;\n    const storage = firebase.storage();\n    const id = uuid();\n    const ref = storage.ref().child(id);\n\n    let width = 1;\n    let height = 1;\n    if (selectedFile) {\n      const img = new Image();\n\n      img.src = window.URL.createObjectURL(selectedFile);\n\n      img.onload = function() {\n        width = img.naturalWidth;\n        height = img.naturalHeight;\n\n        window.URL.revokeObjectURL(img.src);\n      };\n    }\n\n    ref.put(selectedFile).then(function(snapshot) {\n      console.log('Saved file');\n      snapshot.ref.getDownloadURL().then(function(url) {\n        console.log(url);\n        firebase\n          .firestore()\n          .collection('events')\n          .doc(eventId)\n          .collection('images')\n          .doc(id)\n          .set({ width: width, height: height, src: url });\n      });\n    });\n  };\n}\n\nexport default withFirebase(Upload);\n","import React from 'react';\nimport { withFirebase } from '../Firebase';\nimport uuid from 'uuid/v4';\n\nclass Stream extends React.Component<any, any> {\n  countdown: any;\n\n  constructor(props) {\n    super(props);\n    this.sendTwitter = this.sendTwitter.bind(this);\n    this.sendTwitterInit = this.sendTwitterInit.bind(this);\n    this.stopTwitter = this.stopTwitter.bind(this);\n  }\n  sendTwitter() {\n    const eventDoc = this.props.firebase\n      .firestore()\n      .collection('events')\n      .doc(this.props.match.params.id);\n\n    eventDoc\n      .collection('twitter')\n      .doc(uuid())\n      .set({\n        width: 1,\n        height: 1,\n        src: 'https://producement.com/img/erko.jpg'\n      });\n  }\n\n  sendTwitterInit() {\n    this.countdown = setInterval(this.sendTwitter, 2000);\n  }\n\n  stopTwitter() {\n    clearInterval(this.countdown);\n  }\n\n  render() {\n    return (\n      <div>\n        <button onClick={this.sendTwitterInit}>Send Twitter images</button>\n        <button onClick={this.stopTwitter}>Stop Twitter images</button>\n      </div>\n    );\n  }\n}\n\nexport default withFirebase(Stream);\n","import React, { Component } from 'react';\nimport Gallery from './components/Gallery';\nimport Upload from './components/Upload';\nimport { withFirebase } from './components/Firebase';\nimport { HashRouter, Route } from 'react-router-dom';\nimport Stream from './components/Stream';\n\nclass App extends Component<any, any> {\n  render() {\n    return (\n      <HashRouter>\n        <div className=\"container-fluid\">\n          <Route path=\"/event/:id\" component={Gallery} />\n          <Route path=\"/upload/:id\" component={Upload} />\n          <Route path=\"/stream/:id\" component={Stream} />\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default withFirebase(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Firebase, { FirebaseContext } from './components/Firebase';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}